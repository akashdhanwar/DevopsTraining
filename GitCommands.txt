git config --global user.name=""
git config --global user.email=""

------------------------------ LINUX RELATED STUFF -----------------------------------------------------------
ssh-keygen -t ed25519 -C "email"	-	Generate SSH key for authentication
cat /root/.ssh/id_ed25519.pub		-	Check key
ssh -t git@github.com			-	Test SSH key
--------------------------------------------------------------------------------------------------------------

-------------------------------- BASIC -----------------------------------------------------------------------
git status
git add Filename		-	To add to staging, add to git tracking
git add .			-	For all files
git commit -m "message"		-	Commit
git commit -am "message"	-	Add and commit, but only old files and not for new created files
git log				-	Last 10 commits with id, print commit logs
git log --author="name/emailId"
git log --oneline --graph
--------------------------------------------------------------------------------------------------------------

------------------------------- PULL/PUSH/MERGE -----------------------------------------------------------------------------------
git clone -b main URL		-	Clone a code
git pull			-	Pull the code
git push			-	Push the code

git branch			-	View Branches. -a to view all branches
git branch branchName		-	Create a branch, only available in local repository
git switch branchName		-	Switch to branch
git checkout branchName		-	Switch to branch
git checkout -b newBranch main	-	Create a new branch and copy main branch content to it
git branch -m oldName newName	-	Rename a branch
git branch -d branchName	-	Delete branch
git push --set-upstream origin branchName	-	Push to a branch by creating upstream/ push a branch to remote repository
git pull origin develop		-	Pull code from a branch
git merge branchName		-	Merge a branch to current branch, but still it will not depict.
					Add it to local git, commit and push, then it will be available as merged
					Can provide a message by -m
					In case of conflict, open file by vi and edit it and push it. Resolved!
------------------------------------------------------------------------------------------------------------------------------------

------------------------------ RESET(rollback to previous commit) REVERT, Compare --------------------------------------------
git reset commitID		-	Reset to a particular commit. Used for local repository revert. 
					Reset --soft resets the history of commit but --hard resets files also 
git revert commitID/HEAD	-	Reverts all changes as a new commit. Used if changed are pushed to remote repository
git diff fileName		-	To see what changes are done in file in Staging area and Working area
git diff commitId1 commitId2	-	Compare different commit id changes

------------------------------------------------------------------------------------------------------------------------------

------------------------------ STASH -------------------------------------------------------------

--------------------------------------------------------------------------------------------------




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 - PAT